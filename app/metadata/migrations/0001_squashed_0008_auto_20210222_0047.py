# Generated by Django 3.0.5 on 2021-10-19 23:14

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import metadata.models
import multiselectfield.db.fields
# import video_encoding.fields  # Removed for Django 5.0 compatibility


class Migration(migrations.Migration):

    replaces = [('metadata', '0001_initial'), ('metadata', '0002_document_access_level'), ('metadata', '0003_auto_20201130_1843'), ('metadata', '0004_auto_20201212_1802'), ('metadata', '0005_auto_20210131_2052'), ('metadata', '0006_auto_20210202_1950'), ('metadata', '0007_auto_20210203_2306'), ('metadata', '0008_auto_20210222_0047')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collaborator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymous', models.BooleanField(blank=True, null=True)),
                ('birthdate', models.CharField(blank=True, max_length=255, validators=[metadata.models.validate_date_text])),
                ('birthdate_min', models.DateField(blank=True, null=True)),
                ('birthdate_max', models.DateField(blank=True, null=True)),
                ('clan_society', models.CharField(blank=True, max_length=255)),
                ('collaborator_id', models.IntegerField(unique=True)),
                ('deathdate', models.CharField(blank=True, max_length=255, validators=[metadata.models.validate_date_text])),
                ('deathdate_min', models.DateField(blank=True, null=True)),
                ('deathdate_max', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=255)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('nickname', models.CharField(blank=True, max_length=255)),
                ('origin', models.CharField(blank=True, max_length=255)),
                ('other_info', models.TextField(blank=True)),
                ('other_names', models.CharField(blank=True, max_length=255)),
                ('tribal_affiliations', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Dialect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Dialect name')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DialectInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=255)),
                ('collaborator_native', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collaborator_native_languages_dialectinstances', to='metadata.Collaborator')),
                ('collaborator_other', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collaborator_other_languages_dialectinstances', to='metadata.Collaborator')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('family', models.CharField(blank=True, max_length=255)),
                ('pri_subgroup', models.CharField(blank=True, max_length=255)),
                ('sec_subgroup', models.CharField(blank=True, max_length=255)),
                ('alt_name', models.CharField(blank=True, max_length=255)),
                ('region', models.CharField(blank=True, max_length=255)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.PositiveIntegerField(editable=False, null=True)),
                ('height', models.PositiveIntegerField(editable=False, null=True)),
                ('duration', models.FloatField(editable=False, null=True)),
                # ('file', video_encoding.fields.VideoField(height_field='height', upload_to='', width_field='width')),  # Removed for Django 5.0 compatibility
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_level_restrictions', models.TextField(blank=True)),
                ('accession_date', models.CharField(blank=True, max_length=255, validators=[metadata.models.validate_date_text])),
                ('accession_date_min', models.DateField(blank=True, null=True)),
                ('accession_date_max', models.DateField(blank=True, null=True)),
                ('accession_number', models.CharField(blank=True, max_length=255)),
                ('acquisition_notes', models.TextField(blank=True)),
                ('additional_digital_file_location', models.CharField(blank=True, max_length=255)),
                ('associated_ephemera', models.TextField(blank=True)),
                ('availability_status', models.CharField(blank=True, choices=[('available', 'available'), ('restrictions', 'restrictions apply'), ('missing_parts', 'missing parts'), ('missing', 'missing')], max_length=13)),
                ('availability_status_notes', models.TextField(blank=True)),
                ('call_number', models.TextField(blank=True)),
                ('catalog_number', models.CharField(max_length=255, unique=True)),
                ('cataloged_by', models.CharField(blank=True, max_length=255)),
                ('cataloged_date', models.CharField(blank=True, max_length=255, validators=[metadata.models.validate_date_text])),
                ('cataloged_date_min', models.DateField(blank=True, null=True)),
                ('cataloged_date_max', models.DateField(blank=True, null=True)),
                ('collecting_notes', models.TextField(blank=True)),
                ('collection_date', models.CharField(blank=True, max_length=255, validators=[metadata.models.validate_date_text])),
                ('collection_date_min', models.DateField(blank=True, null=True)),
                ('collection_date_max', models.DateField(blank=True, null=True)),
                ('collection_name', models.CharField(blank=True, max_length=255)),
                ('collector_info', models.TextField(blank=True)),
                ('collector_name', models.CharField(blank=True, max_length=255)),
                ('condition', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fragile', 'Fragile'), ('fair', 'Fair'), ('poor', 'Poor')], max_length=9)),
                ('condition_notes', models.TextField(blank=True)),
                ('conservation_recommendation', models.CharField(blank=True, max_length=255)),
                ('conservation_treatments_performed', models.CharField(blank=True, max_length=255)),
                ('copyrighted_notes', models.TextField(blank=True)),
                ('country_or_territory', models.CharField(blank=True, max_length=255)),
                ('county_or_parish', models.CharField(blank=True, max_length=255)),
                ('creation_date', models.CharField(blank=True, max_length=255, validators=[metadata.models.validate_date_text])),
                ('creation_date_min', models.DateField(blank=True, null=True)),
                ('creation_date_max', models.DateField(blank=True, null=True)),
                ('deposit_date', models.CharField(blank=True, max_length=255, validators=[metadata.models.validate_date_text])),
                ('deposit_date_min', models.DateField(blank=True, null=True)),
                ('deposit_date_max', models.DateField(blank=True, null=True)),
                ('depositor_contact_information', models.TextField(blank=True)),
                ('depositor_name', models.CharField(blank=True, max_length=255)),
                ('description_scope_and_content', models.TextField(blank=True)),
                ('digital_file_location', models.CharField(blank=True, max_length=255)),
                ('english_title', models.TextField(blank=True)),
                ('equipment_used', models.CharField(blank=True, max_length=255)),
                ('filemaker_legacy_pk_id', models.IntegerField(blank=True, null=True)),
                ('general_content', models.CharField(blank=True, choices=[('audio', 'Audio'), ('audio-video', 'Audio/Video'), ('book', 'Book'), ('manuscript', 'Manuscript'), ('ephemera', 'Ephemera'), ('website', 'Website')], max_length=11)),
                ('genre', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('article', 'Article'), ('book', 'Book'), ('ceremony', 'Ceremony'), ('ceremonial', 'Ceremonial'), ('chant', 'Chant'), ('conversation', 'Conversation'), ('correspondence', 'Correspondence'), ('curse', 'Curse'), ('dataset', 'Dataset'), ('debate', 'Debate'), ('description', 'Description'), ('document', 'Document'), ('drama', 'Drama'), ('educational', 'Educational material'), ('elicitation', 'Elicitation'), ('ethnography', 'Ethnography'), ('field_notes', 'Field notes'), ('grammar', 'Grammar'), ('greeting', 'Greeting/Leave-taking'), ('history', 'History'), ('instructions', 'Instructions'), ('instrumental', 'Instrumental music'), ('interview', 'Interview'), ('lexicon', 'Lexicon'), ('meeting', 'Meeting'), ('myth', 'Myth'), ('narrative', 'Narrative'), ('oratory', 'Oratory'), ('photograph', 'Photograph'), ('poetry', 'Poetry'), ('prayer', 'Prayer'), ('procedure', 'Procedure'), ('proverb', 'Proverb'), ('reader', 'Reader'), ('recipe', 'Recipe'), ('ritual', 'Ritual song'), ('sketch', 'Sketch'), ('song', 'Song'), ('speech', 'Speech play'), ('thesis', 'Thesis'), ('transcript', 'Transcript'), ('translation', 'Translation'), ('unintelligible', 'Unintelligible speech'), ('wordlist', 'Wordlist')], max_length=399)),
                ('global_region', models.CharField(blank=True, max_length=255)),
                ('indigenous_title', models.TextField(blank=True)),
                ('ipm_issues', models.CharField(blank=True, max_length=255)),
                ('isbn', models.CharField(blank=True, max_length=255)),
                ('item_access_level', models.CharField(blank=True, choices=[('1', '1 - Open Access'), ('2', '2 - Materials are available to view onsite but no copies may be distributed'), ('3', '3 - Access protected by a time limit'), ('4', '4 - Depositor (or someone else) controls access to the resource')], max_length=1)),
                ('lender_loan_number', models.CharField(blank=True, max_length=255)),
                ('loc_catalog_number', models.CharField(blank=True, max_length=255)),
                ('location_of_original', models.TextField(blank=True)),
                ('migration_file_format', models.CharField(blank=True, max_length=255)),
                ('migration_location', models.CharField(blank=True, max_length=255)),
                ('municipality_or_township', models.CharField(blank=True, max_length=255)),
                ('original_format_medium', models.CharField(blank=True, choices=[('audio_cd', 'audio CD'), ('audio_reel', 'audio reel'), ('book', 'book'), ('cassette', 'cassette'), ('cd', 'CD'), ('cd_dvd', 'CD-DVD'), ('dat', 'DAT'), ('cd_r', 'data CD (CD-R)'), ('dv_r', 'data DVD (DV-R)'), ('diskette', 'diskette'), ('dvd', 'DVD'), ('ephemera', 'ephemera'), ('garment', 'garment'), ('hi_8', 'hi-8'), ('manuscript', 'manuscript'), ('microcassette', 'microcassette'), ('mini_DV', 'mini-DV'), ('other', 'other'), ('reel_to_reel', 'reel-to-reel'), ('vhs', 'VHS'), ('video_reel', 'video reel'), ('vinyl_record', 'vinyl record')], max_length=13)),
                ('other_information', models.TextField(blank=True)),
                ('other_institutional_number', models.CharField(blank=True, max_length=255)),
                ('permission_to_publish_online', models.BooleanField(blank=True, null=True)),
                ('project_grant', models.CharField(blank=True, max_length=255)),
                ('public_event', models.CharField(blank=True, max_length=255)),
                ('publisher', models.CharField(blank=True, max_length=255)),
                ('recorded_on', models.CharField(blank=True, max_length=255)),
                ('recording_context', models.TextField(blank=True)),
                ('software_used', models.CharField(blank=True, max_length=255)),
                ('state_or_province', models.CharField(blank=True, max_length=255)),
                ('temporary_accession_number', models.CharField(blank=True, max_length=255)),
                ('total_number_of_pages_and_physical_description', models.CharField(blank=True, max_length=255)),
                ('type_of_accession', models.CharField(blank=True, choices=[('conversion', 'Conversion'), ('transfer', 'Exchange/Transfer'), ('field', 'Field Collection'), ('found', 'Found in Collection/Conversion'), ('gift', 'Gift'), ('purchase', 'Purchase'), ('reproduction', 'Reproduction')], max_length=12)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=255)),
                ('collaborator', models.ManyToManyField(blank=True, related_name='item_collaborators', to='metadata.Collaborator', verbose_name='list of collaborators')),
                ('language', models.ManyToManyField(blank=True, related_name='item_languages', through='metadata.DialectInstance', to='metadata.Language', verbose_name='list of languages')),
                ('collectors_number', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['catalog_number'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('filetype', models.CharField(blank=True, max_length=32)),
                ('enumerator', models.PositiveIntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('filesize', models.FloatField(blank=True, null=True)),
                ('av_spec', models.CharField(blank=True, max_length=255)),
                ('creation_date', models.CharField(blank=True, max_length=255, validators=[metadata.models.validate_date_text])),
                ('creation_date_min', models.DateField(blank=True, null=True)),
                ('creation_date_max', models.DateField(blank=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=255)),
                ('collaborator', models.ManyToManyField(blank=True, related_name='document_collaborators', to='metadata.Collaborator', verbose_name='list of collaborators')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='item_documents', to='metadata.Item')),
                ('language', models.ManyToManyField(blank=True, related_name='document_languages', through='metadata.DialectInstance', to='metadata.Language', verbose_name='list of languages')),
                ('access_level', models.CharField(blank=True, choices=[('1', '1 - Open Access'), ('2', '2 - Materials are available to view onsite but no copies may be distributed'), ('3', '3 - Access protected by a time limit'), ('4', '4 - Depositor (or someone else) controls access to the resource')], max_length=1)),
            ],
            options={
                'ordering': ['filename'],
            },
        ),
        migrations.AddField(
            model_name='dialectinstance',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_dialectinstances', to='metadata.Document'),
        ),
        migrations.AddField(
            model_name='dialectinstance',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='item_dialectinstances', to='metadata.Item'),
        ),
        migrations.AddField(
            model_name='dialectinstance',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='language_dialectinstances', to='metadata.Language'),
        ),
        migrations.AddField(
            model_name='dialectinstance',
            name='name',
            field=models.ManyToManyField(blank=True, related_name='dialectinstance_dialects', to='metadata.Dialect', verbose_name='dialect for this language'),
        ),
        migrations.AddField(
            model_name='dialect',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='language_dialects', to='metadata.Language'),
        ),
        migrations.CreateModel(
            name='CollaboratorRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('annotator', 'Annotator'), ('author', 'Author'), ('collector', 'Collector'), ('compiler', 'Compiler'), ('consultant', 'Consultant'), ('data_inputter', 'Data inputter'), ('editor', 'Editor'), ('filmer', 'Filmer'), ('illustrator', 'Illustrator'), ('interlocutor', 'Interlocutor'), ('interpreter', 'Interpreter'), ('interviewer', 'Interviewer'), ('performer', 'Performer'), ('photographer', 'Photographer'), ('publisher', 'Publisher'), ('recorder', 'Recorder'), ('research_participant', 'Research participant'), ('researcher', 'Researcher'), ('responder', 'Responder'), ('signer', 'Signer'), ('speaker', 'Speaker'), ('sponsor', 'Sponsor'), ('transcriber', 'Transcriber'), ('translator', 'Translator')], max_length=253)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=255)),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborator_collaboratorroles', to='metadata.Collaborator')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_collaboratorroles', to='metadata.Document')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='item_collaboratorroles', to='metadata.Item')),
            ],
        ),
        migrations.AddField(
            model_name='collaborator',
            name='native_languages',
            field=models.ManyToManyField(blank=True, related_name='collaborator_native_languages', through='metadata.DialectInstance', to='metadata.Language', verbose_name='Native/First languages'),
        ),
        migrations.AddField(
            model_name='collaborator',
            name='other_languages',
            field=models.ManyToManyField(blank=True, related_name='collaborator_other_languages', through='metadata.DialectInstance', to='metadata.Language', verbose_name='Other languages'),
        ),
        migrations.AddField(
            model_name='collaborator',
            name='added',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='collaborator',
            name='modified_by',
            field=models.CharField(default='kavon', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='collaborator',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name='Columns_export',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('item_access_level_restrictions', models.BooleanField(default=True)),
                ('item_accession_date', models.BooleanField(default=True)),
                ('item_accession_number', models.BooleanField(default=True)),
                ('item_acquisition_notes', models.BooleanField(default=True)),
                ('item_additional_digital_file_location', models.BooleanField(default=True)),
                ('item_associated_ephemera', models.BooleanField(default=True)),
                ('item_availability_status', models.BooleanField(default=True)),
                ('item_availability_status_notes', models.BooleanField(default=True)),
                ('item_call_number', models.BooleanField(default=True)),
                ('item_catalog_number', models.BooleanField(default=True)),
                ('item_cataloged_by', models.BooleanField(default=True)),
                ('item_cataloged_date', models.BooleanField(default=True)),
                ('item_collaborator', models.BooleanField(default=True)),
                ('item_collaborator_role', models.BooleanField(default=True)),
                ('item_collecting_notes', models.BooleanField(default=True)),
                ('item_collection_date', models.BooleanField(default=True)),
                ('item_collection_name', models.BooleanField(default=True)),
                ('item_collector_info', models.BooleanField(default=True)),
                ('item_collector_name', models.BooleanField(default=True)),
                ('item_condition', models.BooleanField(default=True)),
                ('item_condition_notes', models.BooleanField(default=True)),
                ('item_conservation_recommendation', models.BooleanField(default=True)),
                ('item_conservation_treatments_performed', models.BooleanField(default=True)),
                ('item_copyrighted_notes', models.BooleanField(default=True)),
                ('item_country_or_territory', models.BooleanField(default=True)),
                ('item_county_or_parish', models.BooleanField(default=True)),
                ('item_creation_date', models.BooleanField(default=True)),
                ('item_deposit_date', models.BooleanField(default=True)),
                ('item_depositor_contact_information', models.BooleanField(default=True)),
                ('item_depositor_name', models.BooleanField(default=True)),
                ('item_description_scope_and_content', models.BooleanField(default=True)),
                ('item_dialect', models.BooleanField(default=True)),
                ('item_digital_file_location', models.BooleanField(default=True)),
                ('item_document_filename', models.BooleanField(default=True)),
                ('item_document_filetype', models.BooleanField(default=True)),
                ('item_document_enumerator', models.BooleanField(default=True)),
                ('item_document_title', models.BooleanField(default=True)),
                ('item_document_duration', models.BooleanField(default=True)),
                ('item_document_filesize', models.BooleanField(default=True)),
                ('item_document_av_spec', models.BooleanField(default=True)),
                ('item_document_language', models.BooleanField(default=True)),
                ('item_document_collaborator', models.BooleanField(default=True)),
                ('item_english_title', models.BooleanField(default=True)),
                ('item_equipment_used', models.BooleanField(default=True)),
                ('item_filemaker_legacy_pk_id', models.BooleanField(default=True)),
                ('item_general_content', models.BooleanField(default=True)),
                ('item_genre', models.BooleanField(default=True)),
                ('item_global_region', models.BooleanField(default=True)),
                ('item_indigenous_title', models.BooleanField(default=True)),
                ('item_ipm_issues', models.BooleanField(default=True)),
                ('item_isbn', models.BooleanField(default=True)),
                ('item_item_access_level', models.BooleanField(default=True)),
                ('item_language', models.BooleanField(default=True)),
                ('item_lender_loan_number', models.BooleanField(default=True)),
                ('item_loc_catalog_number', models.BooleanField(default=True)),
                ('item_location_of_original', models.BooleanField(default=True)),
                ('item_migration_file_format', models.BooleanField(default=True)),
                ('item_migration_location', models.BooleanField(default=True)),
                ('item_municipality_or_township', models.BooleanField(default=True)),
                ('item_original_format_medium', models.BooleanField(default=True)),
                ('item_other_information', models.BooleanField(default=True)),
                ('item_other_institutional_number', models.BooleanField(default=True)),
                ('item_permission_to_publish_online', models.BooleanField(default=True)),
                ('item_project_grant', models.BooleanField(default=True)),
                ('item_public_event', models.BooleanField(default=True)),
                ('item_publisher', models.BooleanField(default=True)),
                ('item_recorded_on', models.BooleanField(default=True)),
                ('item_recording_context', models.BooleanField(default=True)),
                ('item_software_used', models.BooleanField(default=True)),
                ('item_state_or_province', models.BooleanField(default=True)),
                ('item_temporary_accession_number', models.BooleanField(default=True)),
                ('item_total_number_of_pages_and_physical_description', models.BooleanField(default=True)),
                ('item_type_of_accession', models.BooleanField(default=True)),
                ('item_added', models.BooleanField(default=True)),
                ('item_updated', models.BooleanField(default=True)),
                ('item_modified_by', models.BooleanField(default=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=255)),
                ('item_document_access_level', models.BooleanField(default=True)),
                ('item_document_collaborator_role', models.BooleanField(default=True)),
                ('item_document_creation_date', models.BooleanField(default=True)),
                ('item_document_dialect', models.BooleanField(default=True)),
                ('item_document_parent_item', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='dialect',
            options={'ordering': ['name']},
        ),
        migrations.CreateModel(
            name='Geographic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lad', models.DecimalField(decimal_places=16, max_digits=22, verbose_name='latitude')),
                ('long', models.DecimalField(decimal_places=16, max_digits=22, verbose_name='longitude')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=255)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_geographic', to='metadata.Document')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='item_geographic', to='metadata.Item')),
            ],
            options={
                'ordering': ['-lad'],
            },
        ),
        migrations.CreateModel(
            name='CollaboratorNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('suffix', models.CharField(blank=True, max_length=255)),
                ('primary', models.BooleanField(default=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=255)),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborator_names', to='metadata.Collaborator')),
            ],
            options={
                'ordering': ['collaborator', 'first_name'],
            },
        ),
    ]
