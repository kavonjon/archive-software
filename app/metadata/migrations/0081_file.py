# Generated by Django 3.2 on 2025-04-20 14:41

from django.db import migrations, models
import django.db.models.deletion
import metadata.models


class Migration(migrations.Migration):

    dependencies = [
        ('metadata', '0080_alter_collection_collection_abbr'),
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('filepath', models.CharField(help_text='Path to the file relative to storage base', max_length=512)),
                ('filetype', models.CharField(blank=True, max_length=32)),
                ('access_level', models.CharField(blank=True, choices=[('1', '1 - Open Access'), ('2', '2 - Materials are available to view onsite but no copies may be distributed'), ('3', '3 - Access protected by a time limit'), ('4', '4 - Depositor (or someone else) controls access to the resource')], max_length=1)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('filesize', models.PositiveIntegerField(blank=True, null=True)),
                ('checksum', models.CharField(blank=True, help_text='SHA-256 checksum of the file', max_length=64)),
                ('mimetype', models.CharField(blank=True, max_length=128)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('av_spec', models.CharField(blank=True, max_length=255)),
                ('creation_date', models.CharField(blank=True, max_length=255, validators=[metadata.models.validate_date_text])),
                ('creation_date_min', models.DateField(blank=True, null=True)),
                ('creation_date_max', models.DateField(blank=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=255)),
                ('collaborator', models.ManyToManyField(blank=True, related_name='file_collaborators', to='metadata.Collaborator', verbose_name='list of collaborators')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='item_files', to='metadata.item')),
                ('language', models.ManyToManyField(blank=True, related_name='file_languages', to='metadata.Languoid', verbose_name='list of languages')),
            ],
            options={
                'ordering': ['filename'],
            },
        ),
    ]
